// Generated by CoffeeScript 1.7.1
var Flow,
  __slice = [].slice;

Flow = (function() {
  function Flow(bindObject, firstParams) {
    this.bindObject = bindObject;
    this.firstParams = firstParams;
    this.fns = [];
    this.doneFn = null;
  }

  Flow.prototype.then = function(fn) {
    this.fns.push(fn);
    return this;
  };

  Flow.prototype.done = function(fn) {
    this.doneFn = fn;
    return this.run(this.firstParams);
  };

  Flow.prototype.getDeferred = function() {
    return {
      resolve: (function(_this) {
        return function() {
          var params;
          params = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
          return _this.run(params);
        };
      })(this),
      reject: (function(_this) {
        return function(err) {
          return _this.doneFn.call(_this.bindObject, err);
        };
      })(this),
      skip: (function(_this) {
        return function() {
          var params;
          params = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
          _this.fns = [];
          return _this.run(params);
        };
      })(this)
    };
  };

  Flow.prototype.run = function(params) {
    var fn;
    if (params == null) {
      params = [];
    }
    fn = this.fns.shift();
    if (fn) {
      params.unshift(this.getDeferred());
      return fn.apply(this.bindObject, params);
    } else {
      params.unshift(null);
      return this.doneFn.apply(this.bindObject, params);
    }
  };

  return Flow;

})();

module.exports = Flow;
